
pipeline {
    agent any

    environment {
        EC2_HOST = 'your-ec2-public-ip-or-dns'  // EC2 public IP or DNS name
        EC2_USER = 'ec2-user'                    // SSH user for Amazon Linux (use 'ubuntu' for Ubuntu)
        SSH_KEY_ID = 'your-jenkins-ssh-key-id'   // SSH Key credential stored in Jenkins
        APP_DIR = '/home/ec2-user/my-web-app'    // Directory on EC2 to deploy the app
    }

    stages {
        stage('Install Python 3 on EC2') {
            steps {
                script {
                    sshagent([SSH_KEY_ID]) {
                        sh """
                            echo "Connecting to EC2 and installing Python 3..."

                            # Connect to EC2 instance and install Python 3 and dependencies
                            ssh -o StrictHostKeyChecking=no ${EC2_USER}@${EC2_HOST} << 'EOF'
                                # Update the system
                                sudo yum update -y

                                # Install Python 3
                                sudo yum install -y python3

                                # Verify Python installation
                                python3 --version
                                pip3 --version
                            EOF
                        """
                    }
                }
            }
        }

        stage('Deploy Web Application') {
            steps {
                script {
                    sshagent([SSH_KEY_ID]) {
                        sh """
                            echo "Deploying the Python web application to EC2..."

                            # Connect to EC2 and deploy the web app
                            ssh -o StrictHostKeyChecking=no ${EC2_USER}@${EC2_HOST} << 'EOF'
                                # Navigate to the application directory
                                mkdir -p ${APP_DIR}
                                cd ${APP_DIR}

                                # Clone the application repository (you can also use SCP to copy files)
                                git clone https://github.com/your-user/your-web-app.git .

                                # Run the web app (Flask or Django) as a background process
                                nohup python app.py > app.log 2>&1 &

                                EOF
                        """
                    }
                }
            }
        }

        stage('Verify Deployment') {
            steps {
                script {
                    sshagent([SSH_KEY_ID]) {
                        sh """
                            echo "Verifying the deployment..."

                            # Check if the app is running by accessing the EC2 instance
                            ssh -o StrictHostKeyChecking=no ${EC2_USER}@${EC2_HOST} << 'EOF'
                                # Check if the Flask/Django app is running
                                ps aux | grep 'python'
                                # Optionally, check if NGINX is running
                                sudo systemctl status nginx
                            EOF
                        """
                    }
                }
            }
        }
    }

    post {
        success {
            echo "Python 3 and web application deployed successfully!"
        }
        failure {
            echo "Deployment failed!"
        }
    }
}
